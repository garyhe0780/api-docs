(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return r}));var a=n(2),b=n(6),i=(n(0),n(71)),c={id:"websocket",title:"Websocket API"},s={unversionedId:"websocket",id:"websocket",isDocsHomePage:!1,title:"Websocket API",description:"General",source:"@site/docs/websocket.mdx",permalink:"/websocket",sidebar:"sidebar",previous:{title:"REST API Documentation",permalink:"/rest"},next:{title:"Data Types",permalink:"/dataTypes"}},l=[{value:"General",id:"general",children:[]},{value:"Authentication",id:"authentication",children:[{value:"Authentication Flow",id:"authentication-flow",children:[]},{value:"Signature Algorithm",id:"signature-algorithm",children:[]}]},{value:"Using WebSocket Streams",id:"using-websocket-streams",children:[{value:"Subscribe",id:"subscribe",children:[]},{value:"Handle <code>snapshot</code> Message",id:"handle-snapshot-message",children:[]},{value:"Handle <code>update</code> Message",id:"handle-update-message",children:[]}]},{value:"Subscription",id:"subscription",children:[{value:"Channel Types",id:"channel-types",children:[]},{value:"Subcribe",id:"subcribe",children:[]},{value:"Unsubscribe",id:"unsubscribe",children:[]}]},{value:"Atomicity",id:"atomicity",children:[]},{value:"Channel Messages",id:"channel-messages",children:[{value:"<code>snapshot</code> Messages",id:"snapshot-messages",children:[]},{value:"<code>update</code> Messages",id:"update-messages",children:[]}]},{value:"Channels",id:"channels",children:[{value:"<code>level2</code> Channel",id:"level2-channel",children:[]},{value:"<code>ticker</code> Channel",id:"ticker-channel",children:[]},{value:"<code>matches</code> Channel",id:"matches-channel",children:[]},{value:"<code>orders</code> Channel",id:"orders-channel",children:[]},{value:"<code>positions</code> Channel",id:"positions-channel",children:[]},{value:"<code>margins</code> Channel",id:"margins-channel",children:[]},{value:"<code>executions</code> Channel",id:"executions-channel",children:[]}]}],p={rightToc:l};function r(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"general"},"General"),Object(i.b)("p",null,"DueDEX offers a fully-featured WebSocket API for real-time streaming, the same endpoint used by our official website, thus enabling you to automate any real-time functionality you see on the web app."),Object(i.b)("p",null,"To connect to the WebSocket feed, use this endpoint:"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"wss://feed.duedex.com/v1/feed")),Object(i.b)("p",null,"For Testnet, use this endpoint instead:"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"wss://feed.testnet.duedex.com/v1/feed")),Object(i.b)("h2",{id:"authentication"},"Authentication"),Object(i.b)("p",null,"You need to authenticate your session if you want to subscribe to private channels. In case the connection is lost, your have to go through the authentication process again after reconnecting."),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Note that authentication is ",Object(i.b)("em",{parentName:"p"},"not")," mandatory if you're only subscribing to public channels."),Object(i.b)("p",{parentName:"div"},"Your API key would need to have ",Object(i.b)("inlineCode",{parentName:"p"},"view")," permission to successfully authenticate."))),Object(i.b)("h3",{id:"authentication-flow"},"Authentication Flow"),Object(i.b)("p",null,"To authenticate, the client first sends a ",Object(i.b)("inlineCode",{parentName:"p"},"challenge")," message:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "challenge"\n}\n')),Object(i.b)("p",null,"Upon receiving the ",Object(i.b)("inlineCode",{parentName:"p"},"challenge")," request, the server responds with a ",Object(i.b)("inlineCode",{parentName:"p"},"challenge")," response, with a random string for you to sign:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "challenge",\n    "challenge": "1f94d8db-a9ca-4cf4-82ee-9692f937032e"\n}\n')),Object(i.b)("p",null,"The client then signs (with algorithm and example below) the challenge to generate an answer, and sends it via an ",Object(i.b)("inlineCode",{parentName:"p"},"auth")," message alongside your API key:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "auth",\n    "key": "YOUR_API_KEY_ID_HERE",\n    "answer": "3563bd49f03177a4aa5efce5ad2042d4416452523eb42d8ddf11b946b0e1d267"\n}\n')),Object(i.b)("p",null,"If the answer is correct, the server responds with an ",Object(i.b)("inlineCode",{parentName:"p"},"auth")," message with your user id:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "auth",\n    "userId": 10\n}\n')),Object(i.b)("p",null,"If the answer is wrong, the connection is terminated immediately and you need to reconnect to start over."),Object(i.b)("h3",{id:"signature-algorithm"},"Signature Algorithm"),Object(i.b)("p",null,"Each API key comes with an ID and a secret (which is shown only once upon creation). The key ID is sent in the ",Object(i.b)("inlineCode",{parentName:"p"},"auth")," request, and the secret is used to sign the challenge in order to generate an answer."),Object(i.b)("p",null,"The secret is Base64 encoded. To use it for signature purposes, decode it first:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"secretKey = base64.decode(apiSecret)\n")),Object(i.b)("p",null,"Then, apply the ",Object(i.b)("inlineCode",{parentName:"p"},"HMAC-SHA256")," algorithm on the challenge (treat the challenge as plain string for signature):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"signature = HMACSHA256(challenge, secretKey)\n")),Object(i.b)("p",null,"Finally, convert the signature into hexadecimal form (case-insensitive):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"answer = signature.toHex()\n")),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("p",null,"In this example, we'll assume the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"API Key: 13f1ab93-771d-4d59-bb6a-fe96f6b609ea\nAPI Secret: 2W2eSP3e0dp+lYMuY1MBUTqF2+8VbNRxDZ88zA7MliU=\n\nChallenge: fd14408d-1740-447d-b335-c019f9201b6e\n")),Object(i.b)("p",null,"First, decode the API secret into byte array:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'secretKey = base64.decode("2W2eSP3e0dp+lYMuY1MBUTqF2+8VbNRxDZ88zA7MliU=")\n\n[217, 109, 158, 72, 253, 222, 209, 218, 126, 149, 131, 46, 99, 83, 1, 81, 58, 133, 219, 239, 21, 108, 212, 113, 13, 159, 60, 204, 14, 204, 150, 37]\n')),Object(i.b)("p",null,"Then apply the hashing algorithm:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'signature = HMACSHA256("fd14408d-1740-447d-b335-c019f9201b6e", secretKey)\n\n[180, 24, 237, 212, 102, 155, 130, 171, 55, 165, 182, 213, 68, 107, 157, 239, 56, 102, 88, 232, 243, 239, 3, 22, 89, 53, 255, 107, 114, 254, 167, 16]\n')),Object(i.b)("p",null,"Some libraries return the hexadecimal representation in this step directly. If your library doesn't, convert the byte array into the hex form:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"answer = signature.toHex()\n\nb418edd4669b82ab37a5b6d5446b9def386658e8f3ef03165935ff6b72fea710\n")),Object(i.b)("h2",{id:"using-websocket-streams"},"Using WebSocket Streams"),Object(i.b)("p",null,"After successful connection to the WebSocket endpoint, no messages will be sent to you by default. To receive real-time data and maintain an up-to-date state in-memory, follow these steps:"),Object(i.b)("h3",{id:"subscribe"},"Subscribe"),Object(i.b)("p",null,"Send a ",Object(i.b)("inlineCode",{parentName:"p"},"subscribe")," request (with details in the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#subscription"}),"next section"),") to listen to updates in channels."),Object(i.b)("h3",{id:"handle-snapshot-message"},"Handle ",Object(i.b)("inlineCode",{parentName:"h3"},"snapshot")," Message"),Object(i.b)("p",null,"After successful subscription, the server will send a message with type ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot"),", which contains the latest data in the channel."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"NOTE")),Object(i.b)("p",{parentName:"blockquote"},"A ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message will always be sent upon subscription, regardless of whether you have already subscribed to the channel.")),Object(i.b)("p",null,"For example, in the ",Object(i.b)("inlineCode",{parentName:"p"},"level2")," channel, the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message contains the complete orderbook data with all bids and asks."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message contains a ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," field, which is used for processing incremental updates."),Object(i.b)("h3",{id:"handle-update-message"},"Handle ",Object(i.b)("inlineCode",{parentName:"h3"},"update")," Message"),Object(i.b)("p",null,"After the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message is sent, the server will start pushing ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages. The ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages contain ",Object(i.b)("em",{parentName:"p"},"only")," incremental updates to the snapshot. The client is responsible for applying the updates to the snapshot locally to keep the state up-to-date."),Object(i.b)("p",null,"While the server tries to send the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message right after a subscription request is received, it's still possible that the client receives ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages before the big ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message arrives. In this case, the client ",Object(i.b)("em",{parentName:"p"},"must")," buffer these ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages and process them after the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," arrives."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"update")," messages also contain a ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," field corresponding to the one in ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," messages."),Object(i.b)("h4",{id:"relationship-between-sequence-in-update-and-snapshot"},"Relationship between ",Object(i.b)("inlineCode",{parentName:"h4"},"sequence")," in ",Object(i.b)("inlineCode",{parentName:"h4"},"update")," and ",Object(i.b)("inlineCode",{parentName:"h4"},"snapshot")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The initial empty snapshot has a ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," of ",Object(i.b)("inlineCode",{parentName:"p"},"0"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The first-ever ",Object(i.b)("inlineCode",{parentName:"p"},"update")," to the snapshot has a ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," of ",Object(i.b)("inlineCode",{parentName:"p"},"1"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"After applying the update ",Object(i.b)("inlineCode",{parentName:"p"},"#1"),", the ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," of the snapshot increments to ",Object(i.b)("inlineCode",{parentName:"p"},"1")," as well")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The next update has a sequence of ",Object(i.b)("inlineCode",{parentName:"p"},"2"),"..."))),Object(i.b)("h4",{id:"ignoring-update-messages"},"Ignoring ",Object(i.b)("inlineCode",{parentName:"h4"},"update")," Messages"),Object(i.b)("p",null,"As mentioned above, it is possible the client receives ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages before the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message. The correct logic for handling such case is as follows:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Subscribe to the channel and listen to messages")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Buffer ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages if they arrive before the ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Receive ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If the buffer is ",Object(i.b)("strong",{parentName:"p"},"not")," empty, remove ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages with ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," smaller than or equal to that of ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If the buffer is still ",Object(i.b)("strong",{parentName:"p"},"not")," empty, apply the remaining ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Clear the buffer")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Apply subsequent ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages directly on the snapshot"))),Object(i.b)("h4",{id:"cases-in-which-you-should-resubscribe"},"Cases in which You should Resubscribe"),Object(i.b)("p",null,"In rare cases, the ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," in ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," and ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages might not connect:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The first ",Object(i.b)("inlineCode",{parentName:"p"},"update")," message received has a ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," greater than the snapshot ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," plus one")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"sequence")," field in a ",Object(i.b)("inlineCode",{parentName:"p"},"update")," message does not equal the last ",Object(i.b)("inlineCode",{parentName:"p"},"sequence")," plus one"))),Object(i.b)("p",null,"In these cases, you should first unsubscribe and then subscribe again to retry."),Object(i.b)("h2",{id:"subscription"},"Subscription"),Object(i.b)("h3",{id:"channel-types"},"Channel Types"),Object(i.b)("p",null,"With regard to whether authentication is required, channels can be divided into:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Public Channels")),Object(i.b)("p",{parentName:"li"},"  Authentication is not required (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"level2"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Private Channels")),Object(i.b)("p",{parentName:"li"},"  Authentication is required (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"orders"),")"))),Object(i.b)("p",null,"With regard to whether the channel is instrument-specific, channels can be divided into:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Instrument Channels")),Object(i.b)("p",{parentName:"li"},"  The channel is instrument-specific (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"matches"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Non-Instrument Channels")),Object(i.b)("p",{parentName:"li"},"  The channel is not instrument-specific (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"positions"),")"))),Object(i.b)("h3",{id:"subcribe"},"Subcribe"),Object(i.b)("p",null,"To subscribe to a channel, send a ",Object(i.b)("inlineCode",{parentName:"p"},"subscribe")," request:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "subscribe",\n    "channels": [\n        {\n            "name": "level2",\n            "instruments": [\n                "BTCUSD"\n            ]\n        }\n    ]\n}\n')),Object(i.b)("p",null,"Note that you ",Object(i.b)("em",{parentName:"p"},"must not")," send the ",Object(i.b)("inlineCode",{parentName:"p"},"instruments")," field for non-instrument channels. You can set to to an empty array or ignore the field altogether."),Object(i.b)("p",null,"If the request is invalid (invalid instrument ids, not authenticated for private channels, etc.), the connection will be aborted immediately."),Object(i.b)("p",null,"Upon successful subscription, a response is sent from the server:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "subscriptions",\n    "channels": [\n        {\n            "name": "level2",\n            "instruments": [\n                "BTCUSD"\n            ]\n        }\n    ]\n}\n')),Object(i.b)("h3",{id:"unsubscribe"},"Unsubscribe"),Object(i.b)("p",null,"Unsubscribing is the same as subscribing, except the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," field is changed from ",Object(i.b)("inlineCode",{parentName:"p"},"subscribe")," to ",Object(i.b)("inlineCode",{parentName:"p"},"unsubscribe"),". For instance, to unsubscribe from the channel above:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "unsubscribe",\n    "channels": [\n        {\n            "name": "level2",\n            "instruments": [\n                "BTCUSD"\n            ]\n        }\n    ]\n}\n')),Object(i.b)("h2",{id:"atomicity"},"Atomicity"),Object(i.b)("p",null,"DueDEX supports batching of atomic updates. Multiple updates sent within an ",Object(i.b)("inlineCode",{parentName:"p"},"update")," message are atomic, meaning that no intermediate state exists between each update."),Object(i.b)("p",null,"In your application, you must ",Object(i.b)("em",{parentName:"p"},"not")," trigger actions on each update item. Instead, only trigger processing after the whole ",Object(i.b)("inlineCode",{parentName:"p"},"update")," message is completely processed."),Object(i.b)("h2",{id:"channel-messages"},"Channel Messages"),Object(i.b)("p",null,"The structures for ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," and ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages are the same across all channels, which significantly simplifies development."),Object(i.b)("h3",{id:"snapshot-messages"},Object(i.b)("inlineCode",{parentName:"h3"},"snapshot")," Messages"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message format:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "snapshot",\n    "channel": CHANNEL_NAME,\n    "instrument": INSTRUMENT_ID_IF_ANY,\n    "sequence": SNAPSHOT_SEQUENCE,\n    "data": CHANNEL_DATA_TYPE,\n    "timestamp": UNIX_TIMESTAMP_MILLISECONDS\n}\n')),Object(i.b)("p",null,"where the ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field is the channel-specific data type."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message contains a complete state."),Object(i.b)("p",null,"An example ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," message:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "snapshot",\n    "channel": "level2",\n    "instrument": "BTCUSD",\n    "sequence": 100,\n    "data": {\n        "bids": [\n            [\n                "8804.00",\n                100\n            ],\n            [\n                "8803.00",\n                100\n            ]\n        ],\n        "asks": [\n            [\n                "8855.00",\n                600\n            ],\n            [\n                "8856.00",\n                1000\n            ],\n            [\n                "8857.00",\n                1000\n            ]\n        ]\n    },\n    "timestamp": "2019-05-30T00:00:00.000Z"\n}\n')),Object(i.b)("h3",{id:"update-messages"},Object(i.b)("inlineCode",{parentName:"h3"},"update")," Messages"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"update")," message format:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "update",\n    "channel": CHANNEL_NAME,\n    "instrument": INSTRUMENT_ID_IF_ANY,\n    "sequence": SNAPSHOT_SEQUENCE,\n    "data": CHANNEL_DATA_TYPE,\n    "timestamp": UNIX_TIMESTAMP_MILLISECONDS\n}\n')),Object(i.b)("p",null,"which is identical to the format of ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot")," messages except the ",Object(i.b)("inlineCode",{parentName:"p"},"type")," field."),Object(i.b)("p",null,"As opposed to ",Object(i.b)("inlineCode",{parentName:"p"},"snapshot"),", ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages only contain the incremental updates. The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field (or each element within, if ",Object(i.b)("inlineCode",{parentName:"p"},"data")," is an array) contains ",Object(i.b)("em",{parentName:"p"},"only")," the item's primary key for you to locate the item, and the fields being updated."),Object(i.b)("p",null,"If the primary key provided doesn't correspond to an item in your local state, it means a new item is created."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"TIPS")),Object(i.b)("p",{parentName:"blockquote"},"Some channels are insert-only (e.g. the ",Object(i.b)("inlineCode",{parentName:"p"},"matches")," channel - obviously you can't modify an existing match). In these channels, the ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field will present all the fields of the model in ",Object(i.b)("inlineCode",{parentName:"p"},"update")," messages.")),Object(i.b)("p",null,"An example ",Object(i.b)("inlineCode",{parentName:"p"},"update")," message:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    "type": "update",\n    "channel": "margins",\n    "sequence": 9,\n    "data": [\n        {\n            "currency": "BTC",\n            "available": "1.948500",\n            "orderMargin": "0.011500"\n        }\n    ],\n    "timestamp": "2019-05-30T00:00:00.000Z"\n}\n')),Object(i.b)("h2",{id:"channels"},"Channels"),Object(i.b)("h3",{id:"level2-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"level2")," Channel"),Object(i.b)("p",null,"This channel maintains the latest level-2 orderbook under an instrument."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  level2")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Public Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"instance")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Orderbook"}),"Orderbook")))),Object(i.b)("h3",{id:"ticker-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"ticker")," Channel"),Object(i.b)("p",null,"This channel maintains the latest ticker under an instrument."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  ticker")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Public Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"instance")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Ticker"}),"Ticker")))),Object(i.b)("h3",{id:"matches-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"matches")," Channel"),Object(i.b)("p",null,"This channel maintains the recent matches under an instrument."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  matches")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Public Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"array")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Match"}),"Match")))),Object(i.b)("h3",{id:"orders-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"orders")," Channel"),Object(i.b)("p",null,"This channel maintains the open orders of a user."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  orders")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Private Non-Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"array")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Order"}),"Order")))),Object(i.b)("h3",{id:"positions-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"positions")," Channel"),Object(i.b)("p",null,"This channel maintains positions under all instruments of a user."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("strong",{parentName:"p"},"NOTE")),Object(i.b)("p",{parentName:"blockquote"},"The position record won't be removed from state even if you don't have an active position. Instead, empty positions have their ",Object(i.b)("inlineCode",{parentName:"p"},"quantity")," fields set to ",Object(i.b)("inlineCode",{parentName:"p"},"0"),".")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  positions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Private Non-Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"array")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Position"}),"Position")))),Object(i.b)("h3",{id:"margins-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"margins")," Channel"),Object(i.b)("p",null,"This channel maintains margins of all currencies of a user."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  margins")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Private Non-Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"array")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Margin"}),"Margin")))),Object(i.b)("h3",{id:"executions-channel"},Object(i.b)("inlineCode",{parentName:"h3"},"executions")," Channel"),Object(i.b)("p",null,"This channel broadcasts executions of all orders across all instruments of a user."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Name")),Object(i.b)("p",{parentName:"li"},"  executions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Channel Type")),Object(i.b)("p",{parentName:"li"},"  Private Non-Instrument Channel")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Data Model")),Object(i.b)("p",{parentName:"li"},"  The ",Object(i.b)("inlineCode",{parentName:"p"},"data")," field on this channel is an ",Object(i.b)("strong",{parentName:"p"},"array")," of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./dataTypes#Execution"}),"Execution")))))}r.isMDXComponent=!0}}]);